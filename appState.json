{
  "EDITOR_STATE": {
    "allProjectFiles": {
      "1938d614-6ef8-4625-b791-77fdebf24cd6": {
        "id": "1938d614-6ef8-4625-b791-77fdebf24cd6",
        "parent": null,
        "name": "animal-reserve-sashini",
        "type": "DIRECTORY",
        "isDirectory": true,
        "children": [
          "089f1046-a991-4a13-847b-0a6d86e9bd40"
        ],
        "isRemovable": false,
        "filePath": "animal-reserve-sashini"
      },
      "089f1046-a991-4a13-847b-0a6d86e9bd40": {
        "id": "089f1046-a991-4a13-847b-0a6d86e9bd40",
        "parent": "1938d614-6ef8-4625-b791-77fdebf24cd6",
        "name": "lambda.js",
        "type": "JS_LAMBDA",
        "isDirectory": false,
        "children": [],
        "isRemovable": true,
        "filePath": "animal-reserve-sashini/lambda.js",
        "code": "let AWS = require(\"aws-sdk\");\nconst ddb = new AWS.DynamoDB.DocumentClient();\nlet rekog = new AWS.Rekognition();\n\nexports.handler = function (event, context, callback) {\n    //console.log(JSON.stringify(event, null, 2));\n\n    let s3 = event.Records[0].s3;\n    rekog.detectLabels({\n        Image: {\n            S3Object: {\n                Bucket: s3.bucket.name,\n                Name: s3.object.key\n            }\n        },\n        MaxLabels: 1\n    }).promise()\n        .then(data => {\n            console.log(data);\n            let label = data.Labels[0].Name;\n            ddb.put({\n                TableName: 'slp-animal-store',\n                Item: {\n                    'name': s3.object.key,\n                    'label': label\n                }\n            }).promise()\n                .then((data) => {\n                    callback(null, {})\n                    //your logic goes here\n                })\n                .catch((err) => {\n                    callback(err)\n                    //handle error\n                });\n            callback(null, {});\n        })\n        .catch(err => callback(err));\n}",
        "config": {
          "runtime": "nodejs8.10",
          "handler": "handler",
          "timeout": 60,
          "memory": 128,
          "layers": []
        },
        "triggers": [
          {
            "resourceName": "s3slpAnimalsUpload",
            "config": {
              "type": "s3:ObjectCreated:*",
              "keyPrefix": "",
              "keySuffix": ""
            }
          }
        ],
        "testCases": {
          "39718274-7509-4676-b56d-d423ae41b867": {
            "id": "39718274-7509-4676-b56d-d423ae41b867",
            "name": "TestEvent",
            "functionId": "089f1046-a991-4a13-847b-0a6d86e9bd40",
            "event": "{\r\n    \r\n}"
          },
          "f04f969c-9c5c-4a85-ad7a-0a99cf762a81": {
            "id": "f04f969c-9c5c-4a85-ad7a-0a99cf762a81",
            "name": "Testevent",
            "functionId": "089f1046-a991-4a13-847b-0a6d86e9bd40",
            "event": ""
          },
          "5c9f686d-2127-4af9-be8e-5e497eea2c6b": {
            "id": "5c9f686d-2127-4af9-be8e-5e497eea2c6b",
            "name": "Unnamed event",
            "functionId": "089f1046-a991-4a13-847b-0a6d86e9bd40",
            "event": "{\n    \"key1\": \"value1\",\n    \"key2\": \"value2\",\n    \"key3\": \"value3\"\n}"
          }
        },
        "customSecurityPolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": "*",
              "Action": [
                "rekognition:*"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": "arn:aws:s3:::slp-animals-upload/*",
              "Action": [
                "s3:GetObject"
              ]
            }
          ]
        }
      }
    },
    "deletedFiles": [],
    "rootNode": "1938d614-6ef8-4625-b791-77fdebf24cd6",
    "openFiles": [
      "089f1046-a991-4a13-847b-0a6d86e9bd40"
    ],
    "currentFileId": "089f1046-a991-4a13-847b-0a6d86e9bd40",
    "resources": {
      "s3slpAnimalsUpload": {
        "name": "s3slpAnimalsUpload",
        "type": "S3",
        "config": {
          "mode": 1,
          "bucket": {
            "region": "us-east-2",
            "name": "slp-animals-upload"
          }
        }
      },
      "ddbslpAnimalStore": {
        "name": "ddbslpAnimalStore",
        "type": "DynamoDB",
        "config": {
          "mode": 0,
          "operation": "put",
          "table": {
            "arn": "",
            "name": "slp-animal-store",
            "partitionKey": "name",
            "partitionKeyType": "S",
            "hasSortKey": true,
            "sortKey": "label",
            "sortKeyType": "S",
            "payPerRequest": true,
            "mode": 0
          },
          "isGlobalEditMode": false,
          "parameters": {
            "TableName": "slp-animal-store",
            "Item": {
              "name": "@{s3.object.key}",
              "label": "@{label}"
            }
          },
          "triggerParams": {},
          "validator": {
            "validatableFields": {},
            "validity": true
          },
          "valid": true
        }
      }
    },
    "customTemplate": {
      "dialect": null,
      "definitions": {}
    },
    "envVariables": [
      {
        "lambdaId": "all",
        "varKey": "SIGMA_AWS_ACC_ID",
        "varValue": null,
        "shouldPersist": false,
        "displayOnly": false,
        "editable": false
      }
    ],
    "packageJSON": {
      "dependencies": {
        "aws-sdk": {
          "name": "aws-sdk",
          "language": "javascript",
          "version": "2.176.0",
          "dev": true,
          "notRemovable": false
        }
      }
    }
  },
  "PROJECT_META": {
    "projectName": "animal-reserve-sashini",
    "projectDescription": "Animal detecting ",
    "projectVersion": "1.0.0",
    "projectRegion": "us-east-2",
    "platform": "AWS",
    "platformRegions": {},
    "lastSave": 1573112622308
  },
  "VCS_STATE": {
    "provider": "GitHub",
    "repo": {
      "name": "animal-reserve-sashini",
      "url": "https://github.com/SashiniHansika/animal-reserve-sashini"
    }
  }
}